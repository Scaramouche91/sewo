#include <avr/io.h>
#include <util/delay.h>

#define F_CPU 16000000UL
#include <util/delay.h>

// Taster-Pins
#define FORWARD_PIN   PD2
#define REVERSE_PIN   PD3

// Motorsteuerungs-Pins (L293D)
#define MOTOR_IN1    PD6 // Richtung 1 (IN1)
#define MOTOR_IN2    PD5 // Richtung 2 (IN2)
#define SERVO_OUT    PB1 // PWM für Servo (OCR1A)
#define MOTOR_ENA    PB3 // PWM für Geschwindigkeit (OCR2B)

void adc_init()
{
  ADMUX |= (1<<REFS0);
  ADCSRA |= (1<<ADEN) | (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2);
}

uint16_t adc_read(uint8_t kanal)
{
  ADMUX = (ADMUX & 0xF0) | (kanal & 0x0F);

  ADCSRA |= (1<<ADSC);
  while (ADCSRA & (1<<ADSC));

  _delay_ms(50);


  ADCSRA |= (1<<ADSC);
  while (ADCSRA & (1<<ADSC));
  return ADC;
}

void timer1_init()
{
  TCCR1A |= (1<<COM1A1) | (1<<WGM11);
  TCCR1B |= (1<<WGM12) | (1<<WGM13) | (1<<CS10) | (1<<CS11);
  ICR1 = 4999;

  DDRB |= (1<<SERVO_OUT);
}

void timer2_init()
{
  Serial.begin(9600);

  while(!Serial);
  
  TCCR2A |= (1<<COM2A1) | (1<<WGM21) | (1<<WGM20);
  TCCR2B |= (1<<CS22);

  DDRB |= (1<<MOTOR_ENA);
}

void servo_pwm(uint16_t value_1)
{
  if(value_1 < 200)
     value_1 = 200;

  if(value_1 > 500)
     value_1 = 500;   
  OCR1A = value_1;
}



 void richtung_steuerung(int8_t value_2)
{
  if (value_2 > 10)
  {
    PORTD |= (1<<MOTOR_IN1);
    PORTD &= ~(1<<MOTOR_IN2);
  }
  else if (value_2 < 0)
  {
    PORTD |= (1<<MOTOR_IN2);
    PORTD &= ~(1<<MOTOR_IN1);
  }
  else if (value_2 == 0)
  {
    PORTD &= ~(1<<MOTOR_IN2);
    PORTD &= ~(1<<MOTOR_IN1);
  }

  OCR2A = value_2;
  _delay_ms(20);
}
 


int main()
{
  DDRD |= (1<<MOTOR_IN1) | (1<<MOTOR_IN2);
  PORTD |= (1<<FORWARD_PIN) | (1<<REVERSE_PIN);

  adc_init();
  timer1_init();
  timer2_init();
  uint8_t richtung = 0;



  while(1)
  {
    uint16_t adc_value_1 = adc_read(0);
    

    uint16_t servo_p = adc_value_1 / 1.5;
    servo_pwm(servo_p);

    int16_t adc_value_2 = adc_read(1);
        
    /*if (!(PIND &(1<<FORWARD_PIN)))
      {
        richtung = 0;
      }

    if (!(PIND &(1<<REVERSE_PIN)))
      {
        richtung = 1;
      }  
*/

    int motor_p = (adc_value_2 - 500) / 2;
    richtung_steuerung(motor_p);

    

  Serial.println(motor_p);
    
    _delay_ms(20);
    //richtung_steuerung(motor_p, richtung);


   
    
  
    
    



  }
}



/* void richtung_steuerung(int8_t value_2)
{
  if (value_2 > 0)
  {
    PORTD |= (1<<MOTOR_IN1);
    PORTD &= ~(1<<MOTOR_IN2);
  }
  else if (value_2 < 0)
  {
    PORTD |= (1<<MOTOR_IN2);
    PORTD &= ~(1<<MOTOR_IN1);
  }
  else if (value_2 == 0)
  {
    PORTD &= ~(1<<MOTOR_IN2);
    PORTD &= ~(1<<MOTOR_IN1);
  }

  OCR2A = value_2;
}
*/






/*
void richtung_steuerung(uint16_t value_2, uint8_t richtung)
 {
  if (richtung == 0)
  {
    PORTD |= (1<<MOTOR_IN1);
    PORTD &= ~(1<<MOTOR_IN2);
  }
  else
  {
    PORTD |= (1<<MOTOR_IN2);
    PORTD &= ~(1<<MOTOR_IN1);
  }
  OCR2A = value_2;
} */
